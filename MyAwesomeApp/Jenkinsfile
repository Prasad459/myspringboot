 pipeline {
 
 agent any
 
 stages {
 
 stage ('Checkout') {    
       steps{
           git 'https://github.com/Prasad459/myspringboot.git'
       }   
    
    }
    
    stage ('build')  {
        steps{
        sh "${mvnHome}/bin/mvn package -f MyAwesomeApp/pom.xml"
        }
    } 
    
    stage ('Docker Build') {
        steps{
            script{
     // Build and push image with Jenkins' docker-plugin
    withDockerServer([uri: "tcp://localhost:4243"]) {
        withDockerRegistry([credentialsId: "dockerhub", url: "https://index.docker.io/v1/"]) {
        image = docker.build("prasad459/myspringbootapp", "MyAwesomeApp")
        image.push()    
        }
      }
            }
        }
    }
    
    stage ('Kubernetes Deploy') {
        steps{
            script{
        kubernetesDeploy(
            configs: 'MyAwesomeApp/springBootDeploy.yml',
            kubeconfigId: 'K8S',
            enableConfigSubstitution: true
            )
            }
        }
    }
    /*
        stage ('Kubernetes Deploy using Kubectl') {
          sh "kubectl apply -f MyAwesomeApp/springBootDeploy.yml"
    }*/

   }
 }